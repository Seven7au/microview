#include <SoftwareSerial.h>
#include <MicroView.h>
SoftwareSerial bt(0,1); // RX, TX BlueTooth serial communication pins

#define COMMAND_LEFT 'a'
#define COMMAND_RIGHT 'd'
#define COMMAND_FORWARD 'w'
#define COMMAND_BACK 's'
#define COMMAND_STOP ' '

// connect motor controller pins to Arduino digital pins
// motor one
int enA = 5;
int in1 = A0;
int in2 = A1;
// motor two
int enB = 6;
int in3 = 3;
int in4 = 2;


void setup() {
pinMode(enA, OUTPUT);
pinMode(in1, OUTPUT);
pinMode(in2, OUTPUT);
pinMode(enB, OUTPUT);
pinMode(in3, OUTPUT);
pinMode(in4, OUTPUT);
bt.begin(9600);//start the bluetooth serial port - send and recieve at 9600 baud
uView.begin();// begin of MicroView
uView.clear(PAGE); // clear page
}

void allOff(int speed)
{
  uView.setCursor(0,0);	// set cursor at 0,0
  uView.print("Motors Off");
  uView.display();// display 
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, LOW);
}
 
void goForward(int speed)
{
  uView.setCursor(0,0);	// set cursor at 0,0
  uView.print("Motors Forward");
  uView.display();// display 
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  analogWrite(enA, speed);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
  analogWrite(enB, speed);
}
  
  void goBackward(int speed)
{
  uView.setCursor(0,0);	// set cursor at 0,0
  uView.print("Motors Backwards");
  uView.display();// display 
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  analogWrite(enA, speed);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
  analogWrite(enB, speed);
}
  
  void goRight(int speed)
{
  uView.setCursor(0,0);	// set cursor at 0,0
  uView.print("Motors Right");
  uView.display();// display 
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  analogWrite(enA, speed);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
  analogWrite(enB, speed);
}
  
  void goLeft(int speed)
{
  uView.setCursor(0,0);	// set cursor at 0,0
  uView.print("Motors Left");
  uView.display();// display 
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  analogWrite(enA, speed);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
  analogWrite(enB, speed);

}

void loop() {
  unsigned long timeout = 0;
//Stop after the timeout
  if (millis() > timeout) {
    allOff;
  }
  if(bt.available()) {
char data = (char)bt.read();
//always reset the timeout
timeout = millis() + 1000;
switch(data) {
  case COMMAND_FORWARD:
    goForward(255);    
    break; 
  case COMMAND_BACK:
    goBackward(255);
    break;
  case COMMAND_LEFT:
    goLeft(200);
    break;
  case COMMAND_RIGHT:
    goRight(200);
    break;
  case COMMAND_STOP:
    allOff(0);
    break;
}
}
}
